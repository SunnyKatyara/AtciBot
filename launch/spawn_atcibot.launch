<?xml version="1.0" encoding="UTF-8"?>
<launch>

<!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="x" default="0"/>
  <arg name="y" default="4"/>
  <arg name="z" default="0.125"/>
  <arg name="world_name" default="/home/sunny/catkin_ws/src/AtciBot/robot_description/worlds/new_warehouse.world"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>
  
  <rosparam file="$(find AtciBot)/robot_description/config/atcibot.yaml" command="load"/>
    
  <!-- Load the URDF with the given hardware interface into the ROS Parameter Server -->
  <param name="robot_description" textfile="$(find AtciBot)/robot_description/urdf/atcibot.urdf"/>
  
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -param robot_description -model atcibot -x $(arg x) -y $(arg y) -z $(arg z)"/>
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/atcibot" args="joint_position_controller joint_state_controller"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/atcibot/joint_states" />
  </node>
  
</launch>
